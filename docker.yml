---
- name: Install Docker on Ubuntu
  hosts: gitops1
  become: yes

  vars:
    docker_users:
      - "ubuntu"

  tasks:
    - name: Set timezone to Asia/Seoul
      timezone:               # 시스템의 시간대 설정
        name: Asia/Seoul

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install required packages
      apt:
        name:
          - ca-certificates
          - curl
        state: present

    - name: Create Docker GPG key directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Add Docker GPG key
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'

    - name: Add Docker repository
      shell: |
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      args:
        executable: /bin/bash
      register: repo_added
      changed_when: repo_added.stdout != ""  # "" < 내용이 없을 때 changed 표시 하라

    - name: Install Docker packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
        update_cache: yes

    - name: Enable and start Docker service
      systemd:
        name: "{{ item }}"
        state: started
        enabled: yes
      loop:               # 리스트 형태로 처리 및 반복 처리
        - docker.service
        - containerd.service

    # https://docs.docker.com/engine/install/linux-postinstall/
    # sudo groupadd docker
    - name: Create Docker group
      group:              # 사용자 그룹 관리 모듈
        name: docker
        state: present

    # sudo usermod -aG docker $USER
    - name: Add users to Docker group
      user:               # 사용자 관리 모듈
        name: "{{ item }}"
        groups: docker
        append: yes
      loop: "{{ docker_users }}"

    # newgrp docker
    - name: Reset SSH connection to allow user changes to affect 'current login user'
      meta: reset_connection

    # docker run hello-world
    - name: Test Docker installation
      command: docker run hello-world
      register: docker_hello
      changed_when: false

    # 결과 출력
    - name: Display Test Docker installation result
      debug:
        var: docker_hello.stdout_lines[1]   # 변수만 그대로 출력

    - name: Check Docker version
      command: docker version
      register: docker_version
      changed_when: false

    - name: Display Docker version
      debug:
        var: docker_version.stdout_lines




